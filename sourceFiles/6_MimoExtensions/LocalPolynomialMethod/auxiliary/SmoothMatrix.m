function [Sf, SmallDFT] = SmoothMatrix(S, SmallDFT, L);%%	 		  1     k+L%	 Sf  =	 ----	sum S(i)%            2*L+1	i=k-L%%	Output parameter%%		Sf			=	Smoothed matrix; size rows x columns X F%		SmallDFT 	=	DFT grid after differentiation and smoothing%%	Input parameter%%		S			=	Matrix function; size rows x columns x F%		SmallDFT 	=	DFT grid after differentiation%		L			=	half width smoothing window%% Rik Pintelon, 2005% version February, 2005%[rows, columns, F] = size(S);% filter coeffientsa = 1;b = ones(1,2*L+1)/(2*L+1);for ii = 1:rows	for jj = 1:columns		Sfilter = filter(b, a, squeeze(S(ii, jj, :)).');		Sf(ii, jj, :) = Sfilter(2*L+1: 2*L+1: end);	end % jjend % iiSmallDFT = SmallDFT(L+1:2*L+1:end-L);