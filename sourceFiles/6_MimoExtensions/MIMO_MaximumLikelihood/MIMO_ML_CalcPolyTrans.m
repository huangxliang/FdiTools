function PolyTrans = MIMO_ML_CalcPolyTrans(Theta, x);%% function PolyTrans = MIMO_ML_CalcPolyTrans(Theta, x);%%	Output parameters%%		PolyTrans	=	structure containing the polynomials and transfer functions evaluated in x%							PolyTrans.A		=	denominator polynomial plant transfer function evaluated in x.Plant, size 1 x F %							PolyTrans.G		=	plant transfer matrix evaluated in x.Plant, size ny x nu x F%							PolyTrans.Tg	=	plant transient term evaluated in x.Plant, size ny x F %%	Input parameters%%		Theta				=	plant, noise, and initial conditions parameters%								structure with fields 'A', 'B', 'Ig'%									Theta = struct('A', [], 'B', [], 'Ig', [])%									Theta.A = 1 x (OrderA+1)%										Theta.A(r) = coefficient a(r-1) of x^(r-1) %									Theta.B = ny x nu x (OrderB+1)%										Theta.B(i,j,r) = coefficient b(i,j,r-1) of x^(r-1)%									Theta.Ig = ny x (OrderIg+1)%										Theta.Ig(i,r) = coefficient ig(i,r-1) of x^(r-1) %%		x                   =	structure containing (jwk) or (zk^-1) values%                                   x.Plant	=	plant model, dimension: F x 1%%% Copyright (c) Rik Pintelon, Vrije Universiteit Brussel - dept. ELEC, November 2009% All rights reserved.% Software can be used freely for non-commercial applications only.%ny = size(Theta.B,1);		% number of outputsnu = size(Theta.B,2);		% number of inputsF = length(x.Plant);		% number of frequenciesPolyTrans = struct('A', zeros(1,F), 'G', zeros(ny, nu, F), 'Tg', zeros(ny, F));%%%%%%%%%%%%%%%%% A polynomial %%%%%%%%%%%%%%%%%PolyTrans.A = polyval(fliplr(Theta.A), x.Plant.');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% G ny x nu plant transfer matrix %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for ii = 1:ny	for jj = 1:nu		PolyTrans.G(ii, jj, :) = polyval(fliplr(squeeze(Theta.B(ii, jj, :)).'), x.Plant.');	end % jjend % iidummy = zeros(1,1,F);dummy(1,1,:) = PolyTrans.A;PolyTrans.G = PolyTrans.G./repmat(dummy, ny, nu);%%%%%%%%%%%%%%%%%%%%%%%%% Plant transient term %%%%%%%%%%%%%%%%%%%%%%%%%for ii = 1:ny	PolyTrans.Tg(ii,:) = polyval(fliplr(Theta.Ig(ii,:)), x.Plant.');end % iiPolyTrans.Tg = PolyTrans.Tg./repmat(PolyTrans.A, ny, 1);