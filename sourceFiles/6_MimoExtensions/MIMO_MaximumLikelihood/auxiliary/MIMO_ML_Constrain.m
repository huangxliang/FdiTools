function Theta = MIMO_ML_Constrain(Theta, ModelVar);%% function Theta = MIMO_ML_Constrain(Theta, ModelVar);%%	Impose the following constraints on the plant model parameters:%			1. reciprocity B%			2. norm([a, vec(b), vec(ig)] = 1%%%	Output parameter%%		Theta	=	see input parameters%%%	Input parameters%%		Theta		=	new estimate plant, noise, and initial conditions parameters%						structure with fields 'A', 'B', 'Ig'%							Theta = struct('A',[],'B',[], 'Ig', [])%							Theta.A = 1 x (OrderA+1)%								Theta.A(r) = coefficient a(r-1) of Omega^(r-1) %							Theta.B = ny x nu x (OrderB+1)%								Theta.B(i,j,r) = coefficient b(i,j,r-1) of Omega^(r-1)%							Theta.Ig = ny x (OrderIg+1)%								Theta.Ig(i,r) = coefficient ig(i,r-1) of Omega^(r-1) %%		ModelVar	=	contains the information about the model to be identified%						structure with fields 'Transient', 'ThePlane', 'TheModel', 'Reciprocal', ...%							ModelVar.Transient		=	1 then the initial conditions of the plant and/or noise are estimated%							ModelVar.PlantPlane		=	plane of the plant model%															's':	continuous-time;%															'w':	sqrt(s)-domain%															'z':	discrete-time;%															'':		plane not defined%							ModelVar.Struct			=	model structure%                                                           'EIV':  errors-in-variables (noisy input-output data)%															'OE':	generalised output error (known input, noisy output)%							ModelVar.RecipPlant		=	1 if plant model is reciprocal: G(i,j) = G(j,i)%							ModelVar.nu				=	number of inputs%							ModelVar.ny				= 	number of outputs%							ModelVar.na				=	order polynomial A%							ModelVar.nb				= 	order matrix polynomial B%							ModelVar.nig			=	order vector polynomial Ig%%% Copyright (c) Rik Pintelon, Vrije Universiteit Brussel - dept. ELEC, November 2009% All rights reserved.% Software can be used freely for non-commercial applications only.%nu = ModelVar.nu;ny = ModelVar.ny;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% constraint on plant model parameters %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if ModelVar.RecipPlant	for jj = 1:nu							% column index		for ii = 1+jj:ny					% row index			lji = jj + ny*(ii-1);			% block position coefficients b(jj,ii) polynomial			% reciprocity plant model					if lji <= nu*ny					% test for rectangular matrices				Theta.B(jj,ii,:) = Theta.B(ii,jj,:);			end % if		end % ii	end % jj		end % if symmetric BNormPlant = norm([Theta.A.'; Theta.B(:); Theta.Ig(:)]);Theta.A = Theta.A/NormPlant;Theta.B = Theta.B/NormPlant;Theta.Ig = Theta.Ig/NormPlant;