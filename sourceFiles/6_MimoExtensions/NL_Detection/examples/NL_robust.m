%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Robust method for measuring the BLA, its variance, the noise variance     %%% and the variance of the stochastic nonlinear distortions from noisy       %%% input/output measurements using random phase multisines                   %%%                                                                           %%% Illustrated on a continuous-time Wiener-Hammerstein system consisting     %%% of the cascade of                                                         %%%                                                                           %%%   1. a second order system:           G1(s) = 1/(1 + s/(Q*w0) + s^2/w0^2) %%%   2. a static nonlinear function:     5*tanh(x/5)                         %%%   3. a first order system:            G2(s) = 1/(1 + Tau*s)               %%%                                                                           %%% Rik Pintelon                                                              %% % December 3, 2007                                                          %%%                                                                           %% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%clear all;close all;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Definition of the Wiener-Hammerstein system %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% second order system G1(s)f0 = 1000;								% resonance frequency at 1 kHzQ = 10;									% quality factor% first order system G2(s)Tau = 1/(2*pi*300);						% 3 dB point at 300 Hz% sampling frequency: 12.5 times oversampling to avoid alias problemsfs = 5e4;								% 50 kHz%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Definition actuator characteristic %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2th order Chebyshev filter with a passband ripple of 6 dB and% a cutoff frequency of 2000 Hz[bcheb, acheb] = cheby1(4, 6, 2*pi*2000, 's');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Definition random phase multisine experiment % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% random phase multisine parametersfmax = 2000;							% maximal frequency 2 kHzF = 500;								% number of frequencies (0, fmax]N = fs/fmax*F;							% number of points per periodExcitedHarm = [1:1:F];                  % excited harmonics multisineAmpl = ones(size(ExcitedHarm));         % amplitudes random phase multisinefreq = ExcitedHarm*fs/N;                    % excited frequencies multisinerms = 2;                                % rms value multisine% parameters experimentP = 2;                                  % number of consecutive periods multisineM = 6;                                  % number of independent repeated experimentsRall =  zeros(M, F);                    % reference spectrum for all realisationsUall = zeros(M, P, F);                  % input spectrum for all realisations and all periodsYall = zeros(M, P, F);                  % output spectrum for all realisations and all periods%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Disturbing input/output noise %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%stdu = rms/10;stdy = sqrt(N/2/F)/50;                   % output noise standard deviation%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Simulation of P periods of the steady state %% response of the Winer-Hamerstein system to  %% M random multisine excitations              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% calculation of the linear transfer functions in the WH-model from DC to Nyquist% at the resolution of the multisine periodfreqN = [0:1:N/2]*fs/N;sN =  2*pi*freqN*sqrt(-1);Gfirst = 1./polyval([1/(2*pi*f0)^2 1/(Q*2*pi*f0) 1], sN);Gsecond = 1./polyval([Tau 1], sN);Gactuator = polyval(bcheb, sN) ./ polyval(acheb, sN);for mm = 1:M		home	mm   	% calculate the reference signal r(t)    r = CalcMultisine(ExcitedHarm, N);          % rms value = 1    r = rms * r.';	    % calculate the noiseless output u0(t) of the actuator    R = fft(r);    U0 = zeros(1,N);    U0(1:N/2+1) = Gactuator.*R(1:N/2+1);    % take 2 times real part since the complex conjugate was not added in U0    u0 = 2*real(ifft(U0)); 	% calculate the noiseless output y0(t) of the Wiener-Hammerstein system		[y0, z] = WH_NL(u0, Gfirst, 'tanh', 5, Gsecond);		% calculate scaled input output spectra at the excited frequencies	U0 = fft(u0);	U0 = U0(2:F+1)/sqrt(N);                     % select the excited frequencies	Y0 = fft(y0);	Y0 = Y0(2:F+1)/sqrt(N);                     % select the excited frequencies		for pp = 1:P		% add measurement noise on input spectrum		Uall(mm, pp, :) = U0 + stdu*(randn(size(U0)) + sqrt(-1)*randn(size(U0)))/sqrt(2);        		% add measurement noise on output spectrum		Yall(mm, pp, :) = Y0 + stdy*(randn(size(Y0)) + sqrt(-1)*randn(size(Y0)))/sqrt(2);	end % pp        % reference signal mm th realisation	Rall(mm, :) = R(2:F+1)/sqrt(N);end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Nonlinear analysis based on the FRFs, the IO spectra without reference, %% and the IO spectra with reference signal                                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% calculate the mean FRF, its sample variance, the noise variance, and the% variance of the stochastic nonlinear contributions in case no reference% signal is available[G_no_ref, Y_no_ref, U_no_ref, CYU_no_ref] = Robust_NL_Anal(Yall, Uall);% the input/output noise (co-)variances and the stochastic nonlinear% contributions corresponding to one period varU1n_no_ref = M*P*(U_no_ref.stdn.^2);varY1s_no_ref = Y_no_ref.stds.^2;varY1n_no_ref = M*P*(Y_no_ref.stdn.^2);% calculate the mean FRF, its sample variance, the noise variance, and the% variance of the stochastic nonlinear contributions in case the reference% signal is available[G_ref, Y_ref, U_ref, CYU_ref] = Robust_NL_Anal(Yall, Uall, Rall);% the input/output noise (co-)variances and the stochastic nonlinear% contributions corresponding to one period varU1n_ref = M*P*(U_ref.stdn.^2);varY1s_ref = Y_ref.stds.^2;varY1n_ref = M*P*(Y_ref.stdn.^2);% input/output spectra of one periodU1 = squeeze(Uall(end, end, :));Y1 = squeeze(Yall(end, end, :));% calculate the mean FRF, its sample variance, the noise variance, and the% variance of the stochastic nonlinear contributions in case only the FRF% is available[G_frf] = Robust_NL_Anal(Yall./Uall);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Comparison analysis using the FRFs, the IO spectra without reference, %% and the IO spectra with reference signal                              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%figure(1)set(gcf, 'Position',[50 100 1200 800])      % larger window for plotting% first row: reference signal is unknownsubplot(231)plot(freq, db(U1), 'k', freq, db(varU1n_no_ref)/2, 'g')TheAxis = [0 2000 -60 20];axis(TheAxis);xlabel('Frequency (Hz)')ylabel('U(k) (dB)')subplot(232)plot(freq, db(Y1), 'k', freq, db(varY1n_no_ref)/2, 'g', freq, db(varY1s_no_ref)/2, 'b')TheAxis = [0 2000 -60 20];axis(TheAxis);xlabel('Frequency (Hz)')ylabel('Y(k) (dB)')title('Without reference signal: total variance (red), noise variance (green), stochastic NL distortion (blue)')subplot(233)plot(freq, db(G_no_ref.mean), 'k', freq, db(G_no_ref.stdNL), 'r', freq, db(G_no_ref.stdn), 'g', freq, db(G_no_ref.stds), 'b')axis(TheAxis);xlabel('Frequency (Hz)')ylabel('G_{BLA}(j\omega_k) (dB)')% second row: reference signal is unknownsubplot(234)plot(freq, db(U1), 'k', freq, db(varU1n_ref)/2, 'g')TheAxis = [0 2000 -60 20];axis(TheAxis);xlabel('Frequency (Hz)')ylabel('U(k) (dB)')subplot(235)plot(freq, db(Y1), 'k', freq, db(varY1n_ref)/2, 'g', freq, db(varY1s_ref)/2, 'b')TheAxis = [0 2000 -60 20];axis(TheAxis);xlabel('Frequency (Hz)')ylabel('Y(k) (dB)')title('With reference signal: total variance (red), noise variance (green), stochastic NL distortion (blue)')subplot(236)plot(freq, db(G_ref.mean), 'k', freq, db(G_ref.stdNL), 'r', freq, db(G_ref.stdn), 'g', freq, db(G_ref.stds), 'b')axis(TheAxis);xlabel('Frequency (Hz)')ylabel('G_{BLA}(j\omega_k) (dB)')zoom on;shgfigure(2)set(gcf, 'Position',[50 100 1200 400])      % larger window for plottingsubplot(131)plot(freq, db(G_frf.mean), 'k', freq, db(G_frf.stdNL), 'r', freq, db(G_frf.stdn), 'g', freq, db(G_frf.stds), 'b')axis(TheAxis);xlabel('Frequency (Hz)')ylabel('G_{BLA}(j\omega_k) (dB)')title('FRF')subplot(132)plot(freq, db(G_no_ref.mean), 'k', freq, db(G_no_ref.stdNL), 'r', freq, db(G_no_ref.stdn), 'g', freq, db(G_no_ref.stds), 'b')axis(TheAxis);xlabel('Frequency (Hz)')ylabel('G_{BLA}(j\omega_k) (dB)')title('IO without ref.')subplot(133)plot(freq, db(G_ref.mean), 'k', freq, db(G_ref.stdNL), 'r', freq, db(G_ref.stdn), 'g', freq, db(G_ref.stds), 'b')axis(TheAxis);xlabel('Frequency (Hz)')ylabel('G_{BLA}(j\omega_k) (dB)')title('IO with ref.')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Illustration of the plot function %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Spacing = 'lin';FigNum = 3;FigNum = Plot_Robust_NL_Anal(G_frf, [], [], freq, Spacing, FigNum);FigNum = Plot_Robust_NL_Anal(G_no_ref, Y_no_ref, U_no_ref, freq, Spacing, FigNum+1);FigNum = Plot_Robust_NL_Anal(G_ref, Y_ref, U_ref, freq, Spacing, FigNum+1);