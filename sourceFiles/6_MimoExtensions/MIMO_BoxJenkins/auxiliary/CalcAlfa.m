function alfa = CalcAlfa(Gc, G);%% function alfa = CalcAlfa(Gc, G);%%	calculates Gc * (Iny + G * Gc)^-1%	with G the ny x nu plant FRM and Gc the nu x ny controller FRM%% Output parameter%%		alfa	=	nu x ny x number of freq. matrix%% Input parameters%%		Gc		=	nu x ny x number of freq. controller transfer function evaluated in x.Plant,%					zero if unknown or not present,%		G		=	ny x nu x number of freq. plant transfer matrix evaluated in x.Plant %%% Copyright (c) Rik Pintelon, Vrije Universiteit Brussel - dept. ELEC, 2004 % All rights reserved.% Software can be used freely for non-commercial applications only.% Version April 2008%[ny, nu, F] = size(G);alfa = zeros(nu, ny, F);if ny > 1        for kk = 1:F	        alfa(:,:,kk) = Gc(:,:,kk)*inv(eye(ny,ny) + G(:,:,kk)*Gc(:,:,kk));	    end % frequencies kkelse % ny = 1        G = squeeze(G);    Gc = squeeze(Gc);    dummy = G .* Gc;    if nu == 1        % squeeze function on 1 x 1 x F delivers F x 1 !!!        dummy = dummy.';        Gc = Gc.';    end % if    alfa(:,1,:) = Gc ./ repmat(1+sum(dummy,1), [nu, 1]);          end % else