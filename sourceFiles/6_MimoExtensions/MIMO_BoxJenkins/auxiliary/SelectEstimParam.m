function TheMat = SelectEstimParam(TheMat, TheSel);%% function TheMat = SelectEstimParam(TheMat, TheSel);%%   selects the columns of the matrix TheMat corresponding to the estimated parameters%%	Output parameter%%		TheMat			    =	matrix where the columns contain only the estimated model parameters%								size: rows x number of free parameters%%	Input parameter%%		TheMat		    	=	matrix where the columns contain all model parameters%								size: rows x number of all parameters%		TheSel				=	structure with fields 'A', 'B', 'Ig', 'C', 'D', 'Ih'%									TheSel = struct('A',[],'B',[], 'Ig', [], 'C',[],'D',[], 'Ih', [])%									TheSel.A = 1 x (OrderA+1)%										TheSel.A(r) = 1 if coeff. a(r-1) is unknown%										Sel.A(r) = 0 if coeff. a(r-1) = 0%									TheSel.B = ny x nu x (OrderB+1)%										TheSel.B(i,j,r) = 1 if coeff. b(i,j,r-1) is unknown%										TheSel.B(i,j,r) = 0 if coeff. b(i,j,r-1) = 0%									TheSel.Ig = ny x (OrderIg+1)%										TheSel.Ig(i,r) = 1 if coeff. ig(i,r-1) is unknown%										TheSel.Ig(i,r) = 0 if coeff. ig(i,r-1) = 0%									TheSel.C = ny x ny x (OrderC+1)%										TheSel.C(i,j,r) = 1 if coeff. c(i,j,r-1) is unknown%										TheSel.C(i,j,r) = 0 if coeff. c(i,j,r-1) = 0%									TheSel.D = 1 x (OrderD+1)%										TheSel.D(r) = 1 if coeff. d(i,j,r-1) is unknown%										TheSel.D(r) = 0 if coeff. d(r-1) = 0%									TheSel.Ih = ny x (OrderIh+1)%										TheSel.Ih(i,r) = 1 if coeff. ih(i,r-1) is unknown%										TheSel.Ih(i,r) = 0 if coeff. ih(i,r-1) = 0%%% Copyright (c) Rik Pintelon, Vrije Universiteit Brussel - dept. ELEC, April 2005 % All rights reserved.% Software can be used freely for non-commercial applications only.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% create row vector that selects the columns of the %% matrix corresponding to the estimated parameters  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% A polynomialSelect = TheSel.A;% B ny x nu matrix polynomial% for jj = 1:nu% 	for ii = 1:ny% 		Select = [Select, squeeze(TheSel.B(ii,jj,:)).'];% 	end % ii% end % jjSelB = permute(TheSel.B,[3,1,2]);Select = [Select, SelB(:).'];% Ig ny x 1 vector polynomial% for ii = 1:ny% 	Select = [Select, TheSel.Ig(ii,:)];% end % iiSelIg = TheSel.Ig.';Select = [Select, SelIg(:).'];% C ny x ny matrix polynomial% for jj = 1:ny% 	for ii = 1:ny% 		Select = [Select, squeeze(TheSel.C(ii,jj,:)).'];% 	end % ii% end % jjSelC = permute(TheSel.C,[3,1,2]);Select = [Select, SelC(:).'];% D polynomialSelect = [Select, TheSel.D];% Ih ny x 1 vector polynomial% for ii = 1:ny% 	Select = [Select, TheSel.Ih(ii,:)];% end % iiSelIh = TheSel.Ih.';Select = [Select, SelIh(:).'];%%%%%%%%%%%%%%%%%%%%%%%%%%%% selection columns Jacob %%%%%%%%%%%%%%%%%%%%%%%%%%%%TheMat = TheMat(:, Select == 1);